service: polls-api-nodejs

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  iamRoleStatements: # Se crea un rol con los permisos necesarios para interactuar con DynamoDB
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
        - dynamodb:PutItem
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: # Le indicamos el recurso para el cual aplica el rol en cuesti√≥n
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POLLS_TABLE_NAME}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POLLS_TABLE_NAME}/index/ListPollsTitles
        - arn:aws:lambda:${self:provider.region}:735585965178:function:polls-api-nodejs-tesis-saveRandomResultsBot
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.POLLS_TABLE_NAME}/index/SearchPollByTitle
  environment: ${file(config/serverless/environment/env.yml)}

package:
  individually: true
  patterns:
    - '!./**'
    - ./node_modules/**

functions:
  - ${file(config/serverless/functions/api/polls_functions.yml)}
  - ${file(config/serverless/functions/api/results_functions.yml)}
  - ${file(config/serverless/functions/bot/save_random_results_bot.yml)}

resources:
  - ${file(../database/database_config.yml)}
